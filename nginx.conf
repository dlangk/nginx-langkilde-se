events {}

http {
    # Redirect all HTTP traffic to HTTPS
    server {
        listen 80;
        server_name langkilde.se www.langkilde.se daniel.langkilde.se www.daniel.langkilde.se;

        location /.well-known/acme-challenge/ {
            root /webroot;
            allow all;
        }

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # HTTPS Configuration
    server {
        listen 443 ssl;
        http2 on;
        server_name langkilde.se www.langkilde.se daniel.langkilde.se www.daniel.langkilde.se;

        # Use Let's Encrypt certificate if available, fallback to self-signed
        ssl_certificate /etc/letsencrypt/live/langkilde.se/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/langkilde.se/privkey.pem;

        # Fallback self-signed certificate
        ssl_certificate /etc/letsencrypt/self-signed/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/self-signed/privkey.pem;

        ssl_session_timeout 1d;
        ssl_session_cache shared:MozSSL:10m;  # About 40000 sessions
        ssl_session_tickets off;

        # Modern SSL configuration from Mozilla's SSL Configuration Generator
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers off;

        # HSTS (requires ngx_http_headers_module) (63072000 seconds = 2 years)
        add_header Strict-Transport-Security "max-age=63072000" always;

        # langkilde-se service
        location / {
            proxy_pass http://langkilde-se:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # yatzy-frontend libraries
        location /js/ {
            proxy_pass http://yatzy-frontend:8090/js/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # yatzy-frontend service – strip the /yatzy/ prefix
        location /yatzy/ {
            proxy_pass http://yatzy-frontend:8090/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # yatzy-backend API – if you want to strip the /yatzy/api/ prefix, include trailing slash
        location /yatzy/api/ {
            proxy_pass http://yatzy-backend:9000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}